@page "/login"

@using TesterProject.BusinessLogic.Utils

@layout EmptyLayout

@inject ILogin Logins
@inject IJSRuntime JSRuntime
@inject SessionState Session
@inject NavigationManager Nav

<EditForm Model="@loginModel" OnValidSubmit="OnLogin">
    <div class="container" id="container">
        <div class="form-container sign-in-container">
            <div class="styled-form">
                <h1>Entrar al servicio</h1>
                <input @bind="loginModel.UserName" type="text" placeholder="Usuario" />
                <input @bind="loginModel.Password" type="password" placeholder="Contraseña" />
                <button type="submit" class="btn btn-primary">Ingresar al sitio</button>
            </div>
        </div>
        <div class="overlay-container">
            <div class="overlay">
                <div class="overlay-panel overlay-right">
                    <h1>O entrar con un usuario de prueba</h1>
                    <p style="font-size:27px">¡Presione debajo para revelar los usuarios de prueba!</p>
                    <button class="ghost" id="verUsuarios">Ver usuarios</button>
                    <button type="button" class="btn-secondary-outline" id="volver" href="/">Volver</button>
                </div>
            </div>
        </div>

    </div>
</EditForm>

@if (error != null)
{
    <div style="color:red">@error</div>
}

@code {
    private Models.Login loginModel = new();
    private string? error;

    private async Task OnLogin()
    {
        try
        {
            Usuario? usuario = await Logins.VerifyLogin(loginModel.UserName, loginModel.Password);
            if (usuario == null)
            {
                error = "Usuario o contraseña incorrectos";
                return;
            }

            Session.UsuarioActual = usuario;
            Nav.NavigateTo("/home");
        }
        catch (Exception ex)
        {
            error = $"Error al iniciar sesión: {ex.Message}";
        }
    }

    private void VolverAlInicio()
    {
        Nav.NavigateTo("/");
    }
}